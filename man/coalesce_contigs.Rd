% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coalesce_contigs.R
\name{coalesce_contigs}
\alias{coalesce_contigs}
\title{Coalesce Pairwise Alignments}
\usage{
coalesce_contigs(gb, tol = Inf, minwidth = 0)
}
\arguments{
\item{gb}{\code{\link{GBreaks}} object of the pairwise alignment.}

\item{tol}{Unaligned region of width lesser than or equal to \code{tol} in both
the reference and query case will be bridged in coalescing.}

\item{minwidth}{Remove the intervals whose width smaller than this value.}
}
\value{
Returns a new \code{GBreaks} object with a reduced number of alignments
fragments due to coalescion.  The returned object is sorted ignoring strand.
For convenience during analysis sessions, its \emph{score} is set to the width of
the ranges on the \emph{target} genome.
}
\description{
This algorithm take in a genome-to-genome alignment, represented as a
collection of intervals in a query genome paired with intervals in a target
genome.  It reduces the number of pairs by coalescing pairs that are
within close proximity on the same strand (user determined).
}
\note{
Fragmented alignments arising from incorrect basecalls, misassembly or
misalignments can cause us to infer artificial breakpoints

Internally, the \code{coalesce_contigs} function uses the \code{precede} and \code{follow}
functions of the \code{GenomicRanges} package.  For a given range, these functions
return the index position of the range it precedes or follows, or \code{NA} as the
first range follows nothing and the last range precedes nothing.  See the
examples for details.
}
\examples{
# Ranges on the plus strand that should coalesce
gb1       <- GRanges(c(A="Ref:100-200:+", B="Ref:400-500:+"))
gb1$query <- GRanges(c(A="Que:100-200",   B="Que:400-500"))
(gb1 <- GBreaks(gb1))
coalesce_contigs(gb1)

# Reference range [1] precedes reference range [2]
precede(gb1)
# Query range [1] precedes query range [2]
precede(gb1$query)

# Ranges on the minus strand that should coalesce
gb2       <- GRanges(c(B="Ref:100-200:-", A="Ref:400-500:-"))
gb2$query <- GRanges(c(B="Que:400-500",   A="Que:100-200"))
gb2$qname <- names(gb2$query)
gb2
# Reference range [1] follows reference range [2]
follow(gb2)
# Or, ignoring strand, reference range [1] precedes reference range [2]
precede(gb2, ignore.strand = TRUE)
# Query range [1] follows query range [2]
follow(gb2$query)
coalesce_contigs(gb2)

# Ranges on the minus strand that should not coalesce because they are not
# ordered properly
gb3       <- GRanges(c("Ref:100-200:-", "Ref:400-500:-"))
gb3$query <- GRanges(c("Que:100-200",   "Que:400-500"))
# Reference range [1] follows reference range [2]
follow(gb3)
# Query range [1] follows query range [2]
precede(gb3$query)
coalesce_contigs(gb3)

# Ranges on the plus strand that should not coalesce because they are not
# ordered properly
gb4       <- GRanges(c("Ref:100-200:+", "Ref:400-500:+", "Ref:600-700:+"))
gb4$query <- GRanges(c("Que:1100-1200:+", "Que:1700-1800:+", "Que:1500-1600:+"))
coalesce_contigs(gb4)

}
\seealso{
Other Colinearity functions: 
\code{\link{GOC}()},
\code{\link{chain_contigs}()},
\code{\link{flagColinearAlignments}()}

Other modifier functions: 
\code{\link{mergeSeqLevels}()},
\code{\link{reverse}()}
}
\author{
Charlotte West

Charles Plessy
}
\concept{Colinearity functions}
\concept{modifier functions}
