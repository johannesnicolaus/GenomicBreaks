% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flagColinearAlignments.R
\name{flagColinearAlignments}
\alias{flagColinearAlignments}
\title{Flag colinear alignments}
\usage{
flagColinearAlignments(gb, tol = Inf, minwidth = 0, details = FALSE)
}
\arguments{
\item{gb}{\code{\link{GBreaks}} object of the pairwise alignment.}

\item{tol}{Unaligned regions larger than this \emph{tolerance} threshold will
interrupt colinearity.}

\item{minwidth}{Remove the intervals whose width smaller than this value.}

\item{details}{Returns more metadata columns if \code{TRUE}.}
}
\value{
Returns a modified \code{GBreaks} object with a new \code{colinear} metadata
column indicating if an alignment is colinear with the next one.  If the
\code{details} option is set to \code{TRUE}, it will also output the relative position
of the following and previous alignments on the \emph{target} and \emph{query} genomes
(\code{tfoll}, \code{tprev}, \code{qfoll}, \code{qprev}), a partial colinearity flag for each
genome (\code{t_col} and \code{q_col}), and the distance to the next alignment on
each genome (\code{tdist} and \code{qdist}).
}
\description{
Flags alignments that are colinear with the next one in sequence order.
The flag is added to the first alignment.  Colinearity is defined by the fact
that the next alignment on the \emph{target} genome is the same as the next
alignment on the \emph{query} genome, with strand information being taken into
account.
}
\details{
Internally, \code{flagColinearAlignments()} uses the \code{\link{precede}}
and \code{\link{follow}} functions functions to determine what is the
\emph{next}.  For a given range, these functions return the index position of the
range it precedes or follows, or \code{NA} as the first range follows nothing and
the last range precedes nothing.  See the examples for details.
}
\note{
The flags are only valid as long as the Genomic Breaks object is not
modified by removing alignments or sorting them in a different order.

Pay attention that if the \code{mindwidth} option is passed, some intervals
are discarded from the returned object.  This parameter might be removed in
the future if too confusing or useless.
}
\examples{
flagColinearAlignments(exampleColinear3)
flagColinearAlignments(exampleColinear3, details = TRUE)

# Target range [1] precedes target range [2]
precede(exampleColinear3)
# Query range [1] precedes query range [2]
precede(exampleColinear3$query)

# Ranges on the minus strand
gb2 <- exampleColinear3 |> reverse() |> sort(ignore.strand = TRUE)
flagColinearAlignments(gb2)

# Target range [1] follows target range [2]
follow(gb2)
# Or, ignoring strand, target range [1] precedes target range [2]
precede(gb2, ignore.strand = TRUE)
# Query range [1] follows query range [2]
follow(gb2$query)

# Colinearity check on strandless objects
gb3 <- exampleColinear3
strand(gb3) <- "*"
flagColinearAlignments(gb3)

# Ranges that should not coalesce because they are not
# ordered properly
flagColinearAlignments(exampleNotColinear)

}
\seealso{
Other Flagging functions: 
\code{\link{flagAll}()},
\code{\link{flagDoubleInversions}()},
\code{\link{flagInversions}()},
\code{\link{flagLongShort}()},
\code{\link{flagTranslocations}()}

Other Colinearity functions: 
\code{\link{GOC}()},
\code{\link{chain_contigs}()},
\code{\link{coalesce_contigs}()},
\code{\link{filterColinearRegions}()}
}
\author{
Charlotte West

Charles Plessy
}
\concept{Colinearity functions}
\concept{Flagging functions}
