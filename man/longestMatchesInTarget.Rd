% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/longestMatchesInTarget.R
\name{longestMatchesInTarget}
\alias{longestMatchesInTarget}
\title{Find longest matches from target to query genome.}
\usage{
longestMatchesInTarget(gb, min.width = 10000, min.matches = 2)
}
\arguments{
\item{gb}{A GenomicBreaks object}

\item{min.width}{Minimum width of a match (on the query genome) for being
considered.}

\item{min.matches}{Discard query sequences that have fewer longest matches than
\code{min.matches} on the target.  Default is 2, so that only results relevant
to chaining genomes are kept.}
}
\value{
Returns a GRangesList object containing one GenomicBreak object per
sequence on the query genome.
}
\description{
Using a \code{GenomicBreaks} object representing the alignment of a query genome
on a target genome, finds the longest match of each sequence (representing
contigs, scaffolds, etc.) of the query genome on the target genome.  Thus,
each sequence of the query genome is represented only once in total, but
sequences of the target genome can be represented multiple times if they
are the longest match of multiple query genome sequences.  When the target
genome is more contiguous than the query genome, and if there are no
major structural variations between them, this will reveal arrangements of
colinear sequences in the query genome.
}
\details{
For a more compact version of the results, the output of this
function can be piped to \code{strandNames(query = TRUE)}.
}
\examples{
\dontrun{
library("BSgenome.Odioica.local.OSKA2016")
library("BSgenome.Odioica.local.OKI2018.I69")
gb <- load_genomic_breaks(
  system.file("extdata/OSKA2016__I69-5.gff3.gz", package="GenomicBreaks"),
  target = OSKA2016,
  query = OKI2018_I69)
}

}
