% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guessSeqLenghts.R
\name{forceSeqLengths}
\alias{forceSeqLengths}
\alias{forceSeqLengths,GRanges-method}
\alias{forceSeqLengths,GBreaks-method}
\title{Set sequence lengths if there were none}
\usage{
forceSeqLengths(x)

\S4method{forceSeqLengths}{GRanges}(x)

\S4method{forceSeqLengths}{GBreaks}(x)
}
\arguments{
\item{x}{A \code{GBreaks} or a \code{GRanges} object.}
}
\value{
\code{\link{forceSeqLengths}} returns the object in which the sequence lengths
have been set to the maximal end coordinates found in the object if if they
did not exist.  For \code{GBreaks} objects it handles both the \emph{target} and the
\emph{query} ranges at the same time.
}
\description{
Takes a \code{\link{GBreaks}} or a \code{\link{GRanges}} object and if \code{seqlengths} are not
available, sets them using the output of the \code{\link{guessSeqLengths}} function.
}
\examples{
# Prepare an example object with no seqlengths
gb <- exampleTranslocation
seqlengths(gb) <-  seqlengths(gb$query) <- NA
gb

# Note that the new seqlengths returned by forceSeqLengths are shorter
# because we can not guess about length of the unaligned ends.
forceSeqLengths(gb)  |> seqlengths()
exampleTranslocation |> seqlengths()

# forceSeqLengths can take whole GBreaks objects as input, or simple GRanges
forceSeqLengths(gb)$query    |> seqlengths()
forceSeqLengths(gb$query)    |> seqlengths()
forceSeqLengths(granges(gb)) |> seqlengths()

}
\seealso{
Other modifier functions: 
\code{\link{coalesce_contigs}()},
\code{\link{guessSeqLengths}()},
\code{\link{mergeSeqLevels}()},
\code{\link{reverse}()},
\code{\link{swap}()}
}
\concept{modifier functions}
